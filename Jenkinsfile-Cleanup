pipeline {
    agent { label 'agent-main' }

    parameters {
        string(name: 'NAMESPACE', defaultValue: 'petclinic', description: 'Namespace c·∫ßn x√≥a')
        booleanParam(name: 'DELETE_INGRESS', defaultValue: false, description: 'X√≥a lu√¥n ingress-nginx namespace?')
    }

    environment {
        HELM_RELEASE = 'petclinic'
    }

    stages {
        stage('Delete Helm Release') {
            steps {
                script {
                    echo "üßπ X√≥a Helm release '${HELM_RELEASE}' trong namespace ${params.NAMESPACE}..."
                    sh """
                    helm uninstall ${HELM_RELEASE} -n ${params.NAMESPACE} || echo '‚ö†Ô∏è Release kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ xo√°'
                    """
                }
            }
        }

        stage('Delete Namespace') {
            steps {
                script {
                    echo "üßº X√≥a namespace ${params.NAMESPACE}..."
                    sh """
                    kubectl delete namespace ${params.NAMESPACE} || echo '‚ö†Ô∏è Namespace kh√¥ng t·ªìn t·∫°i'
                    """
                }
            }
        }

        stage('Force Finalizer Cleanup (n·∫øu c·∫ßn)') {
            steps {
                script {
                    echo "üõ† Force xo√° finalizers (n·∫øu namespace b·ªã treo)..."
                    sh """
                    kubectl get namespace ${params.NAMESPACE} -o json > ns.json || true
                    sed -i 's/"finalizers": \\[.*\\]/"finalizers": []/' ns.json
                    kubectl replace --raw "/api/v1/namespaces/${params.NAMESPACE}/finalize" -f ns.json || true
                    rm -f ns.json
                    """
                }
            }
        }

        stage('Delete Ingress NGINX (tu·ª≥ ch·ªçn)') {
            when {
                expression { return params.DELETE_INGRESS }
            }
            steps {
                script {
                    echo "üß® Xo√° ingress-nginx..."
                    sh """
                    helm uninstall ingress-nginx -n ingress-nginx || echo '‚ö†Ô∏è Helm release kh√¥ng t·ªìn t·∫°i'
                    kubectl delete namespace ingress-nginx || echo '‚ö†Ô∏è Namespace kh√¥ng t·ªìn t·∫°i'

                    # Finalizer cleanup n·∫øu namespace treo
                    kubectl get namespace ingress-nginx -o json | jq '.spec.finalizers = []' | \
                    kubectl replace --raw "/api/v1/namespaces/ingress-nginx/finalize" -f - || true
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
