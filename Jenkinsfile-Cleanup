pipeline {
    agent { label 'agent-main' }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    environment {
        K8S_NAMESPACE = "petclinic"
    }

    stages {
        stage('üßπ X√≥a Helm Release') {
            steps {
                script {
                    def helmReleases = [
                        "admin-server",
                        "api-gateway",
                        "config-server",
                        "customers",
                        "discovery-server",
                        "genai",
                        "vets",
                        "visits"
                    ]

                    for (release in helmReleases) {
                        sh """
                            echo "üóëÔ∏è ƒêang g·ª° Helm release: ${release}"
                            helm uninstall ${release} -n ${K8S_NAMESPACE} || echo "‚ö†Ô∏è Helm release '${release}' kh√¥ng t·ªìn t·∫°i."
                        """
                    }
                }
            }
        }

        stage('üß® X√≥a t√†i nguy√™n K8s c√≤n s√≥t') {
            steps {
                script {
                    def resources = ["pod", "service", "ingress", "deployment", "statefulset", "replicaset", "configmap", "secret"]

                    for (res in resources) {
                        sh """
                            echo "üßº ƒêang x√≥a t√†i nguy√™n ${res} trong namespace ${K8S_NAMESPACE}..."
                            kubectl delete ${res} --all -n ${K8S_NAMESPACE} || echo "‚ö†Ô∏è Kh√¥ng c√≤n ${res} n√†o ƒë·ªÉ x√≥a."
                        """
                    }
                }
            }
        }

        stage('üóëÔ∏è (Optional) X√≥a c·∫£ namespace') {
            steps {
                sh """
                    echo "‚ö†Ô∏è ƒêang x√≥a to√†n b·ªô namespace ${K8S_NAMESPACE}..."
                    kubectl delete namespace ${K8S_NAMESPACE} || echo "‚ö†Ô∏è Namespace '${K8S_NAMESPACE}' kh√¥ng t·ªìn t·∫°i."
                """
            }
        }
    }

    post {
        always {
            echo "‚úÖ To√†n b·ªô qu√° tr√¨nh cleanup ƒë√£ ho√†n t·∫•t!"
        }
    }
}
